//pairStar

public String pairStar(String str) {
   if(str.length() == 0 || str.length() == 1)
    return str;
    
  return findPairs(str, 0);
  }
  
public String findPairs(String str, int index){
 if(index == str.length() - 1)
    return str;
  
 if(str.charAt(index) == str.charAt(index + 1))
  return findPairs(str.substring(0, index + 1) + "*" + str.substring(index + 1, str.length()), index + 1);
 
  return findPairs(str, index + 1) ;
  
  
}


//count8

public int count8(int n) {  
    
  return find8(n, 0);
}

public int find8(int n, int count){
 if(n == 0)
    return count;

 if(n % 10 == 8){
   if((n / 10) % 10 == 8)
    return find8(n/10, count + 2);
   else 
    return find8(n/10, count + 1);
 }
   
 return find8(n/10, count);
}



//array6

public boolean array6(int[] nums, int index) {
  if(index >= nums.length)
    return false;
  if(nums[index] == 6)
    return true;

  return array6(nums, index + 1);
}


//array220

public boolean array220(int[] nums, int index) {
  if(nums.length == 0 || nums.length == 1)
    return false;
  if(index + 1 >= nums.length)
    return false;
  if(nums[index] * 10 == nums[index + 1])
    return true;
    
  return array220(nums, index + 1);  
    
}
